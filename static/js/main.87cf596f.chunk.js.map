{"version":3,"sources":["Config.js","Utils.js","components/Entity.jsx","components/Token.jsx","components/Line.jsx","components/Analysis.jsx","components/Main.jsx","components/AddForm.jsx","App.jsx","serviceWorker.js","index.js"],"names":["process","isEmpty","obj","Object","entries","length","constructor","cleanEntities","text","data","lines","split","entities","index","entity","forEach","line","lineIndex","lineTokens","tokenize","token","tokenIndex","term","fromEntries","map","trim","capitalize","string","charAt","toUpperCase","slice","Entity","this","props","classes","uri","geo","type","mode","gazetteer","children","title","Fragment","CN","PN","RNA","PPN","STN","PSTN","APN","ACN","PLN","PPLN","APLN","UN","AT","FT","GENT","INI","PPT","className","Tooltip","placement","href","React","Component","withStyles","theme","borderBottom","display","padding","Token","grid","symbol","syllables","synalepha","IconButton","color","aria-label","syllable","Chip","key","is_stressed","label","has_synalepha","variant","flat","style","marginRight","stressed","backgroundColor","Line","tokens","annotations","word","enjambment","width","margin","Analysis","stanzas","poem","analysis","stanza","Typography","paragraph","scansion","textarea","Main","handleDrawerOpen","setState","open","handleDrawerClose","state","operations","current","poems","callback","params","operation","join","fetch","Config","method","headers","body","then","response","json","catch","error","console","warn","analyzePoem","updatePoem","root","CssBaseline","AppBar","position","classNames","appBar","appBarShift","Toolbar","disableGutters","onClick","menuButton","hide","noWrap","Drawer","drawer","anchor","paper","drawerPaper","drawerHeader","direction","Divider","List","_","ListItem","button","changeCurrent","ListItemIcon","ListItemText","primary","content","contentShift","LinearProgress","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","flexShrink","alignItems","mixins","toolbar","justifyContent","flexGrow","spacing","withTheme","Transition","forwardRef","ref","Slide","AddForm","poemTitle","poemText","handleClickOpen","handleClose","handleSubmit","onSubmit","handleTextChange","event","field","target","value","Fab","fab","Dialog","fullScreen","onClose","TransitionComponent","flex","Button","TextField","required","onChange","multiline","helperText","float","bottom","right","extendedIcon","App","addPoem","bind","changeCurrentPoem","poemProps","forceUpdate","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.87cf596f.chunk.js","sourcesContent":["const API_ROOT = process.env.REACT_APP_API_ROOT || \"http://localhost:5000/\";\nconst POEM_TITLE = \"El Príncipe constante\";\nconst POEM_TEXT =\n`Éstas que fueron pompa y alegría\ndespertando al albor de la maña-\nna, a la tarde serán lástima vana\ndurmiendo en brazos de la noche fría.\n\nEste matiz que al cielo desafía,\nIris listado de oro, nieve y grana,\nserá escarmiento de la vida humana:\n¡tanto se emprende en término de un día!\n\nA florecer las rosas madrugaron,\ny para envejecerse florecieron:\ncuna y sepulcro en un botón hallaron.\n\nTales los hombres sus fortunas vieron:\nen un día nacieron y espiraron;\nque pasados los siglos horas fueron.`\n\nexport default {\n    API_ROOT, POEM_TITLE, POEM_TEXT\n}\n","import { tokenize } from 'string-punctuation-tokenizer';\nimport Config from './Config';\n\nconst isEmpty = (obj) => (\n  Object.entries(obj).length === 0 && obj.constructor === Object\n);\n\nconst analyzePoem = (text, operations, callback) => {\n  const params = operations\n    .map(operation => `operations=${operation}`)\n    .join(\"&\");\n  fetch(Config.API_ROOT + `analysis?${params}`, {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: text\n  })\n  .then(response => response.json())\n  .catch(error => {\n    console.warn(\"Fetch failed for analysis\");\n    return {};\n  })\n  .then(data => {\n    if (!isEmpty(data)) {\n      callback(cleanEntities(text, data));\n    };\n  });\n}\n\nconst cleanEntities = (text, data) => {\n  let lines = text.split(/[\\n]+/);\n  let entities = {};\n  let index = 0;\n  let entity = data.entities[index];\n  lines.forEach((line, lineIndex) => {\n    let lineTokens = {};\n    tokenize({text: line}).forEach((token, tokenIndex) => {\n      if ((data.entities) && (index < data.entities.length) && (token === entity.term)) {\n        // Trim all values in entity\n        lineTokens[tokenIndex] = Object.fromEntries(\n          Object.entries(entity).map(([k, v]) => [k, v.trim()])\n        );\n        entity = data.entities[++index];\n      }\n    });\n    if (!isEmpty(lineTokens)) {\n      entities[lineIndex] = lineTokens;\n    }\n  });\n  return {...data, entities: entities, };\n};\n\nconst capitalize = (string) => (\n  string.charAt(0).toUpperCase() + string.slice(1)\n);\n\nexport { isEmpty, analyzePoem, capitalize };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport { capitalize } from \"../Utils\";\n\nconst styles = theme => ({\n  entity: {\n    borderBottom: \"1px dashed\",\n    display: \"inline-block\",\n    padding: \"0.25em\",\n  },\n});\n\nclass Entity extends React.Component {\n\n  render() {\n    const { classes, uri, geo, type, mode, gazetteer, children } = this.props;\n    const types = {\n      CN: \"common name\",\n      PN: \"proper name\",\n      RNA: \"royal name\",\n      PPN: \"proposed proper name\",\n      STN: \"saint name\",\n      PSTN: \"proposed saint name\",\n      APN: \"ambiguous proper name\",\n      ACN: \"ambiguous common name\",\n      PLN: \"place name\",\n      PPLN: \"proposed place name\",\n      APLN: \"ambiguous place name\",\n      UN: \"unidentified\",\n    }\n    const modes = {\n      AT: \"ambiguous\",\n      FT: \"found\",\n      GENT: \"generated\",\n      INI: \"unidentified\",\n      PPT: \"proposed\",\n    };\n    const title = <React.Fragment>\n      <div>{`${capitalize(types[type])} (${modes[mode]})`}</div>\n      { gazetteer ? <em>{`${gazetteer} Gazetteer`}</em> : \"\" }\n    </React.Fragment>\n    return (\n      <div className={classes.entity}>\n        <Tooltip title={title} placement=\"top\">\n          <div>\n          { uri ? <a href={uri} title={geo}>{children}</a> : children }\n          </div>\n        </Tooltip>\n      </div>\n    );\n  }\n}\n\nEntity.propTypes = {\n  children: PropTypes.any,\n  term: PropTypes.string,\n  type: PropTypes.string,\n  mode: PropTypes.string,\n  uri: PropTypes.string,\n  gazetteer: PropTypes.string,\n  geo: PropTypes.string,\n};\n\nexport default withStyles(styles)(Entity);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport SpaceBarIcon from '@material-ui/icons/SpaceBar';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip } from '@material-ui/core';\nimport Entity from './Entity';\n\nconst styles = theme => ({\n  token: {\n    display: \"inline-block\",\n  },\n  stressed: {\n      backgroundColor: \"red\",\n  },\n  synalepha: {\n    padding: 0,\n  }\n});\n\nclass Token extends React.Component {\n\n  render() {\n    const { classes, symbol, syllables, entity } = this.props;\n    const synalepha = (<IconButton\n      color=\"inherit\"\n      aria-label=\"Synalepha\"\n      className={classes.synalepha}\n    >\n      <SpaceBarIcon />\n    </IconButton>);\n    let grid;\n    if (syllables) {\n      grid = syllables.map((syllable, index) => (\n        [<Chip\n          key={`$${syllable}${index}`}\n          color={syllable.is_stressed ? \"primary\" : \"default\"}\n          label={ syllable.syllable } />,\n          syllable.has_synalepha ? synalepha : \"\",\n        ]\n      ))\n    } else {\n      grid = <Chip variant=\"outlined\" label={ symbol } />\n    }\n    return (\n      <div className={classes.token}>\n        {[\n          entity ? <Entity {...entity} children={grid.flat()} /> : grid,\n          <span style={{ marginRight: \"0.75em\" }} />\n        ]}\n      </div>\n    );\n  }\n}\n\nToken.propTypes = {\n  symbol: PropTypes.string,\n  syllables: PropTypes.array,\n  entity: PropTypes.object,\n};\n\nexport default withStyles(styles)(Token);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport KeyboardReturnIcon from '@material-ui/icons/KeyboardReturn';\nimport Token from './Token';\nimport { isEmpty, capitalize } from '../Utils.js';\n\nconst styles = theme => ({\n  line: {\n    display: \"inline-block\",\n    width: \"100%\",\n    margin: \"0.25em\",\n  },\n  enjambment: {\n    padding: 0,\n  }\n});\n\nclass Line extends React.Component {\n\n  render() {\n    const { classes, tokens, annotations } = this.props;\n    const line = tokens.map((token, index) => (\n      token.symbol ? <Token key={`$${token.symbol || token.word}${index}`} symbol={token.symbol} /> : <Token syllables={token.word} entity={annotations.entities[index]} />\n    ))\n    const hasEnjambment = !isEmpty(annotations.enjambment);\n    const enjambment = hasEnjambment ? (<Tooltip title={capitalize(annotations.enjambment.type)} placement=\"top\">\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Enjambment\"\n        className={classes.enjambment}\n      >\n        <KeyboardReturnIcon />\n      </IconButton>\n    </Tooltip>) : \"\";\n    return (\n      <div className={classes.line}>\n        <span>{ line }</span><span>{ enjambment }</span>\n      </div>\n    );\n  }\n}\n\nLine.propTypes = {\n  tokens: PropTypes.array.isRequired,\n  annotations: PropTypes.object\n};\n\nexport default withStyles(styles)(Line);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Line from './Line';\nimport { isEmpty } from '../Utils.js';\n\nconst styles = theme => ({\n  textarea: {\n    width: \"50em\",\n  },\n});\n\nclass Analysis extends React.Component {\n\n  render() {\n    const { poem } = this.props;\n    let stanzas\n    if (isEmpty(poem.analysis)) {\n      stanzas = poem.text.split(/[\\n]+/).map((stanza, index) => (\n        <Typography key={index} paragraph>{stanza}</Typography>\n      ))\n    } else {\n      stanzas = poem.analysis.scansion.map((line, index) => (\n        <Line\n          tokens={line.tokens}\n          annotations={{\n            enjambment: poem.analysis.enjambment[index] || {},\n            entities: poem.analysis.entities[index] || {}\n          }}\n        />\n      ));\n    }\n    return (\n      <div>\n        {stanzas}\n      </div>\n    );\n  }\n}\n\nAnalysis.propTypes = {\n  poem: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Analysis);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport BookIcon from '@material-ui/icons/Book';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport Analysis from './Analysis';\nimport { isEmpty, analyzePoem } from '../Utils';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass Main extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      operations: [\"scansion\", \"enjambment\", \"entities\"],\n    };\n  }\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  componentDidUpdate() {\n    const { current, poems } = this.props;\n    const poem = poems[current];\n    const text = poem ? poem.text : null;\n    const analysis = poem ? poem.analysis : {};\n    if (isEmpty(analysis) && text) {\n      analyzePoem(text,\n                  this.state.operations,\n                  data => this.props.updatePoem({...poem, analysis: data}));\n    }\n  }\n\n  render() {\n    const { classes, theme, current, poems } = this.props;\n    const { open } = this.state;\n    const poem = poems[current];\n    const title = poem ? poem.title : \"\";\n    const text = poem ? poem.text : \"\";\n    const analysis = poem ? <Analysis poem={poem} /> : \"To start, add a poem\";\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar disableGutters={!open}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              PoetryLab: {title}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={this.handleDrawerClose}>\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {this.props.poems.map(({title, _}, index) => (\n              <ListItem button key={title} onClick={() => this.props.changeCurrent(index)}>\n                <ListItemIcon><BookIcon /></ListItemIcon>\n                <ListItemText primary={title} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            <ListItem button key=\"Upload a zip\">\n              <ListItemIcon><AttachFileIcon /></ListItemIcon>\n              <ListItemText primary=\"Upload a zip\" />\n            </ListItem>\n            <ListItem button key=\"Download all\">\n              <ListItemIcon><CloudDownloadIcon /></ListItemIcon>\n              <ListItemText primary=\"Download all\" />\n            </ListItem>\n          </List>\n        </Drawer>\n        <main\n          className={classNames(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n           { analysis }\n           { poem && isEmpty(poem.analysis) && text ? [<LinearProgress key=\"analyzing-progress\" />, \"Analyzing...\"] : \"\" }\n        </main>\n      </div>\n    );\n  }\n}\n\nMain.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  poems: PropTypes.array.isRequired,\n  current: PropTypes.number.isRequired,\n  changeCurrent: PropTypes.func.isRequired,\n  updatePoem: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Main);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\nimport Config from '../Config';\n\nconst styles = theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  flex: {\n    flex: 1,\n  },\n  fab: {\n    margin: theme.spacing(1),\n    position: 'absolute',\n    float: 'right',\n    bottom: theme.spacing(1),\n    right: theme.spacing(1),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  textarea: {\n    width: \"50em\",\n  },\n});\n\nconst Transition = React.forwardRef((props, ref) => <Slide direction=\"up\" {...props} ref={ref} />);\n\nclass AddForm extends React.Component {\n  state = {\n    open: false,\n    poemTitle: Config.POEM_TITLE,\n    poemText: Config.POEM_TEXT,\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleSubmit = () => {\n    this.props.onSubmit(this.state.poemTitle, this.state.poemText);\n    this.handleClose();\n  };\n\n  handleTextChange = (event, field) => {\n    this.setState({\n      [[field]]: event.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Fab color=\"primary\" variant=\"extended\" aria-label=\"Add\" className={classes.fab}  onClick={this.handleClickOpen}>\n            <AddIcon />\n            Add Poem\n        </Fab>\n        <Dialog\n          fullScreen\n          open={this.state.open}\n          onClose={this.handleClose}\n          TransitionComponent={Transition}\n        >\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                Add Poem\n              </Typography>\n              <Button color=\"inherit\" onClick={this.handleSubmit}>\n                Submit\n              </Button>\n            </Toolbar>\n          </AppBar>\n          <List>\n            <ListItem button>\n              <TextField\n                required\n                label=\"Title\"\n                margin=\"normal\"\n                value={this.state.poemTitle}\n                onChange={event => this.handleTextChange(event, \"poemTitle\")}\n              />\n            </ListItem>\n            <ListItem button>\n              <TextField\n                required\n                className={classes.textarea}\n                label=\"Enter your poem text\"\n                multiline\n                margin=\"normal\"\n                variant=\"filled\"\n                helperText=\"You can use multiline\"\n                value={this.state.poemText}\n                onChange={event => this.handleTextChange(event, \"poemText\")}\n              />\n            </ListItem>\n          </List>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nAddForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(AddForm);","import React, { Component } from 'react'\n\nimport Main from './components/Main'\nimport AddForm from './components/AddForm'\n\n\nclass App extends Component {\n  state = {\n    poems: [],\n    current: -1\n  }\n\n  constructor(props) {\n    super(props);\n    this.addPoem = this.addPoem.bind(this);\n    this.changeCurrentPoem = this.changeCurrentPoem.bind(this);\n    this.updatePoem = this.updatePoem.bind(this);\n  }\n\n  addPoem(title, text) {\n    this.setState({\n      poems: [...this.state.poems, {title, text, analysis: {}}],\n      current: this.state.poems.length,\n    })\n  }\n\n  updatePoem(poemProps) {\n    const { poems, current } = this.state;\n    poems[current] = poemProps;\n    this.setState({ poems });\n    this.forceUpdate();\n  }\n\n  changeCurrentPoem(index) {\n    this.setState({\n      current: index,\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Main {...this.state}\n          changeCurrent={this.changeCurrentPoem}\n          updatePoem={this.updatePoem}\n        />\n        <AddForm onSubmit={this.addPoem} />\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}