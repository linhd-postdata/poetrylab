{"version":3,"sources":["components/Token.js","components/Line.js","Config.js","Utils.js","components/Analysis.js","components/Main.js","components/AddForm.js","App.js","serviceWorker.js","index.js"],"names":["Token","grid","_this$props","this","props","classes","symbol","syllables","synalepha","react_default","a","createElement","IconButton_default","color","aria-label","className","SpaceBar_default","map","syllable","index","index_es","key","concat","is_stressed","label","has_synalepha","variant","token","style","marginRight","React","Component","withStyles","theme","display","stressed","backgroundColor","padding","Line","tokens","annotations","line","components_Token","word","enjambment","length","KeyboardReturn_default","width","margin","Config","API_ROOT","POEM_TITLE","POEM_TEXT","isEmpty","obj","Object","entries","constructor","Analysis","stanzas","poem","analysis","text","split","stanza","Typography_default","paragraph","scansion","components_Line","textarea","Main","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleDrawerOpen","setState","open","handleDrawerClose","state","operations","_this2","current","poems","callback","params","operation","join","fetch","method","mode","headers","Content-Type","body","then","response","json","catch","error","console","warn","data","analyzePoem","updatePoem","objectSpread","_this3","_this$props2","title","components_Analysis","root","CssBaseline_default","AppBar_default","position","classNames","appBar","defineProperty","appBarShift","Toolbar_default","disableGutters","onClick","menuButton","hide","Menu_default","noWrap","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","Divider_default","List_default","_ref","_","ListItem_default","button","changeCurrent","ListItemIcon_default","Book_default","ListItemText_default","primary","AttachFile_default","CloudDownload_default","content","contentShift","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","flexShrink","alignItems","mixins","toolbar","justifyContent","flexGrow","spacing","unit","withTheme","Transition","Slide_default","assign","AddForm","poemTitle","poemText","handleClickOpen","handleClose","handleSubmit","onSubmit","handleTextChange","event","field","target","value","Fab_default","fab","Add_default","Dialog_default","fullScreen","onClose","TransitionComponent","Close_default","flex","Button_default","TextField_default","required","onChange","multiline","helperText","float","bottom","right","extendedIcon","App","addPoem","bind","assertThisInitialized","changeCurrentPoem","toConsumableArray","poemProps","_this$state","forceUpdate","components_Main","components_AddForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0e3a6d9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport SpaceBarIcon from '@material-ui/icons/SpaceBar';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  token: {\n    display: \"inline-block\",\n  },\n  stressed: {\n      backgroundColor: \"red\",\n  },\n  synalepha: {\n    padding: 0,\n  }\n});\n\nclass Token extends React.Component {\n\n  render() {\n    const { classes, symbol, syllables } = this.props;\n    const synalepha = (<IconButton\n      color=\"inherit\"\n      aria-label=\"Synalepha\"\n      className={classes.synalepha}\n    >\n      <SpaceBarIcon />\n    </IconButton>);\n    let grid;\n    if (syllables) {\n      grid = syllables.map((syllable, index) => (\n        [<Chip\n          key={`$${syllable}${index}`}\n          color={syllable.is_stressed ? \"primary\" : \"default\"}\n          label={ syllable.syllable } />,\n          syllable.has_synalepha ? synalepha : \"\",\n        ]\n      ))\n    } else {\n      grid = <Chip variant=\"outlined\" label={ symbol } />\n    }\n    return (\n      <div className={classes.token}>\n        { [grid, <span style={{ marginRight: \"0.75em\" }} />] }\n      </div>\n    );\n  }\n}\n\nToken.propTypes = {\n  symbol: PropTypes.string,\n  syllables: PropTypes.array\n};\n\nexport default withStyles(styles)(Token);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardReturnIcon from '@material-ui/icons/KeyboardReturn';\nimport Token from './Token';\n\nconst styles = theme => ({\n  line: {\n    display: \"inline-block\",\n    width: \"100%\",\n    margin: \"0.25em\",\n  },\n  enjambment: {\n    padding: 0,\n  }\n});\n\nclass Line extends React.Component {\n\n  render() {\n    const { classes, tokens, annotations } = this.props;\n    const line = tokens.map((token, index) => (\n      token.symbol ? <Token key={`$${token.symbol || token.word}${index}`} symbol={token.symbol} /> : <Token syllables={token.word} />\n    ))\n    const hasEnjambment = (\n      annotations.enjambment && annotations.enjambment.length !== 0\n    );\n    const enjambment = hasEnjambment ? (<IconButton\n      color=\"inherit\"\n      aria-label=\"Enjambment\"\n      className={classes.enjambment}\n    >\n      <KeyboardReturnIcon />\n    </IconButton>) : \"\";\n    return (\n      <div className={classes.line}>\n        <span>{ line }</span><span>{ enjambment }</span>\n      </div>\n    );\n  }\n}\n\nLine.propTypes = {\n  tokens: PropTypes.array.isRequired,\n  annotations: PropTypes.object\n};\n\nexport default withStyles(styles)(Line);","const API_ROOT = \"http://62.204.199.36:5000/\";  // http://localhost:5000/\nconst POEM_TITLE = \"El Príncipe constante\";\nconst POEM_TEXT = \n`Éstas que fueron pompa y alegría\ndespertando al albor de la maña-\nna, a la tarde serán lástima vana\ndurmiendo en brazos de la noche fría.\n\nEste matiz que al cielo desafía,\nIris listado de oro, nieve y grana,\nserá escarmiento de la vida humana:\n¡tanto se emprende en término de un día!\n\nA florecer las rosas madrugaron,\ny para envejecerse florecieron:\ncuna y sepulcro en un botón hallaron.\n\nTales los hombres sus fortunas vieron:\nen un día nacieron y espiraron;\nque pasados los siglos horas fueron.`\n\nexport default {\n    API_ROOT, POEM_TITLE, POEM_TEXT\n}","import Config from './Config';\n\nconst isEmpty = (obj) => (\n  Object.entries(obj).length === 0 && obj.constructor === Object\n);\n\nconst analyzePoem = (text, operations, callback) => {\n  const params = operations\n    .map(operation => `operations=${operation}`)\n    .join(\"&\");\n  fetch(Config.API_ROOT + `analysis?${params}`, {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: text\n  })\n  .then(response => response.json())\n  .catch(error => {\n    console.warn(\"Fetch failed for analysis\");\n    return {};\n  })\n  .then(data => {\n    if (!isEmpty(data)) callback(data);\n  });\n}\n\nexport { isEmpty, analyzePoem };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Line from './Line';\nimport { isEmpty } from '../Utils.js';\n\nconst styles = theme => ({\n  textarea: {\n    width: \"50em\",\n  },\n});\n\nclass Analysis extends React.Component {\n\n  render() {\n    const { poem } = this.props;\n    let stanzas\n    if (isEmpty(poem.analysis)) {\n      stanzas = poem.text.split(/[\\n]+/).map((stanza, index) => (\n        <Typography key={index} paragraph>{stanza}</Typography>\n      ))\n    } else {\n      stanzas = poem.analysis.scansion.map((line, index) => (\n        <Line\n          tokens={line.tokens}\n          annotations={{enjambment: poem.analysis.enjambment[index] || []}}\n        />\n      ));\n    }\n    return (\n      <div>\n        {stanzas}\n      </div>\n    );\n  }\n}\n\nAnalysis.propTypes = {\n  poem: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Analysis);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport BookIcon from '@material-ui/icons/Book';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport Analysis from './Analysis';\nimport { isEmpty, analyzePoem } from '../Utils';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass Main extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      operations: [\"scansion\", \"enjambment\"],\n    };\n  }\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  componentDidUpdate() {\n    const { current, poems } = this.props;\n    const poem = poems[current];\n    const text = poem ? poem.text : null;\n    const analysis = poem ? poem.analysis : {};\n    if (isEmpty(analysis) && text.length !== 0) {\n      analyzePoem(text,\n                  this.state.operations,\n                  data => this.props.updatePoem({...poem, analysis: data}));\n    }\n  }\n\n  render() {\n    const { classes, theme, current, poems } = this.props;\n    const { open } = this.state;\n    const poem = poems[current];\n    const title = poem ? poem.title : \"\";\n    const text = poem ? poem.text : \"\";\n    const analysis = poem ? <Analysis poem={poem} /> : \"To start, add a poem\";\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar disableGutters={!open}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              PoetryLab: {title}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={this.handleDrawerClose}>\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {this.props.poems.map(({title, _}, index) => (\n              <ListItem button key={title} onClick={() => this.props.changeCurrent(index)}>\n                <ListItemIcon><BookIcon /></ListItemIcon>\n                <ListItemText primary={title} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            <ListItem button key=\"Upload a zip\">\n              <ListItemIcon><AttachFileIcon /></ListItemIcon>\n              <ListItemText primary=\"Upload a zip\" />\n            </ListItem>\n            <ListItem button key=\"Download all\">\n              <ListItemIcon><CloudDownloadIcon /></ListItemIcon>\n              <ListItemText primary=\"Download all\" />\n            </ListItem>\n          </List>\n        </Drawer>\n        <main\n          className={classNames(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n           { analysis }\n           { poem && isEmpty(poem.analysis) && text.length !== 0  ? \"Analyzing...\" : \"\" }\n        </main>\n      </div>\n    );\n  }\n}\n\nMain.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  poems: PropTypes.array.isRequired,\n  current: PropTypes.number.isRequired,\n  changeCurrent: PropTypes.func.isRequired,\n  updatePoem: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Main);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\nimport Config from '../Config';\n\nconst styles = theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  flex: {\n    flex: 1,\n  },\n  fab: {\n    margin: theme.spacing.unit,\n    position: 'absolute',\n    float: 'right',\n    bottom: theme.spacing.unit,\n    right: theme.spacing.unit,\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit,\n  },\n  textarea: {\n    width: \"50em\",\n  },\n});\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass AddForm extends React.Component {\n  state = {\n    open: false,\n    poemTitle: Config.POEM_TITLE,\n    poemText: Config.POEM_TEXT,\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleSubmit = () => {\n    this.props.onSubmit(this.state.poemTitle, this.state.poemText);\n    this.handleClose();\n  };\n\n  handleTextChange = (event, field) => {\n    this.setState({\n      [[field]]: event.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Fab color=\"primary\" variant=\"extended\" aria-label=\"Add\" className={classes.fab}  onClick={this.handleClickOpen}>\n            <AddIcon />\n            Add Poem\n        </Fab>\n        <Dialog\n          fullScreen\n          open={this.state.open}\n          onClose={this.handleClose}\n          TransitionComponent={Transition}\n        >\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                Add Poem\n              </Typography>\n              <Button color=\"inherit\" onClick={this.handleSubmit}>\n                Submit\n              </Button>\n            </Toolbar>\n          </AppBar>\n          <List>\n            <ListItem button>\n              <TextField\n                required\n                label=\"Title\"\n                margin=\"normal\"\n                value={this.state.poemTitle}\n                onChange={event => this.handleTextChange(event, \"poemTitle\")}\n              />\n            </ListItem>\n            <ListItem button>\n              <TextField\n                required\n                className={classes.textarea}\n                label=\"Enter your poem text\"\n                multiline\n                margin=\"normal\"\n                variant=\"filled\"\n                helperText=\"You can use multiline\"\n                value={this.state.poemText}\n                onChange={event => this.handleTextChange(event, \"poemText\")}\n              />\n            </ListItem>\n          </List>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nAddForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(AddForm);","import React, { Component } from 'react'\n\nimport Main from './components/Main'\nimport AddForm from './components/AddForm'\n\n\nclass App extends Component {\n  state = {\n    poems: [],\n    current: -1\n  }\n\n  constructor(props) {\n    super(props);\n    this.addPoem = this.addPoem.bind(this);\n    this.changeCurrentPoem = this.changeCurrentPoem.bind(this);\n    this.updatePoem = this.updatePoem.bind(this);\n  }\n\n  addPoem(title, text) {\n    this.setState({\n      poems: [...this.state.poems, {title, text, analysis: {}}],\n      current: this.state.poems.length,\n    })\n  }\n\n  updatePoem(poemProps) {\n    const { poems, current } = this.state;\n    poems[current] = poemProps;\n    this.setState({ poems });\n    this.forceUpdate();\n  }\n\n  changeCurrentPoem(index) {\n    this.setState({\n      current: index,\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Main {...this.state}\n          changeCurrent={this.changeCurrentPoem}\n          updatePoem={this.updatePoem}\n        />\n        <AddForm onSubmit={this.addPoem} />\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}